swagger: "2.0"
info:
  version: "1.0.0"
  title: "Use API Spotify"
host: "localhost:3000"
basePath: "/api"
schemes:
- http
tags:
- name: Login/Sign Up
- name: User Manager
- name: User Space
- name: Favoris
- name: Search
- name: Favoris Albums
paths:
  "/login":
    post:
      tags:
      - Login/Sign Up
      parameters:
      - name: user
        in: body
        schema:
          $ref: '#/definitions/User'
      summary: "Se connecter"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
  "/sign_up":
    post:
      tags:
      - Login/Sign Up
      summary: "S'inscrire"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserCreation'
  "/users/{userId}":
    parameters:
    - name: userId
      in: path
      type: string
      required: true

    patch:
      tags:
      - User Manager
      summary: "Update an user"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserUpdate'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
    delete:
      tags:
      - User Manager
      summary: "Delete an user by ID"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                - ok
                - ko
              deletedId:
                type: string
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
  "/favoris":

    get:
      parameters:
      - name: first
        type: number
        in: query
      - name: offset
        type: number
        in: query
      - name: term
        type: string
        in: query
      tags:
      - Favoris
      summary: "Find favoris"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserUpdate'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
    post:
        tags:
        - Favoris
        parameters:
        - name: favoris
          in: body
          schema:
            $ref: '#/definitions/FavorisCreation'
        summary: "Create a favori"
        responses:
          200:
            description: OK
            schema:
              $ref: '#/definitions/Favoris'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/NotFound'
  "/favoris/{favorisId}":
    parameters:
    - name: userId
      in: path
      type: string
      required: true
    - name: favorisId
      in: path
      type: string
      required: true
    get:
      tags:
      - Favoris
      summary: "Find favori by ID"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/FavorisUpdate'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
    patch:
      tags:
      - Favoris
      summary: "Update an favoris by ID"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Favoris'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
    delete:
        tags:
        - Favoris
        summary: "Delete a favoris by ID"
        responses:
          200:
            description: OK
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                  - ok
                  - ko
                deletedId:
                  type: string
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/NotFound'

  "/space ":
    patch:
      tags:
      - User Space
      summary: "Update my user"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserUpdate'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
    get:
      tags:
      - User Space
      summary: "See my profile"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'

  "/favoris/{favorisId}/albums":
    parameters:
    - name: favorisId
      in: path
      type: string
      required: true
    get:
      parameters:
      - name: first
        type: number
        in: query
      - name: offset
        type: number
        in: query
      - name: term
        type: string
        in: query
      tags:
      - Favoris Albums
      summary: "Find album for a favoris"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Albums'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
    post:
      tags:
      - Favoris Albums
      parameters:
      - name: album
        in: body
        schema:
          $ref: '#/definitions/AlbumsCreation'
      summary: "Add Album to my favori"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Albums'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
  "/favoris/{favorisId}/albums{albumId}":
    parameters:
      - name: albumId
        in: path
        type: string
        required: true
      - name: favorisId
        in: path
        type: string
        required: true
    get:
      tags:
      - Favoris Albums
      summary: "Find an album by ID"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Albums'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
    patch:
      tags:
      - Favoris Albums
      parameters:
      - name: favoris
        in: body
        schema:
          $ref: '#/definitions/AlbumsUpdate'
      summary: "Update an album by ID"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Albums'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
    delete:
      tags:
      - Favoris Albums
      summary: "Delete an album by ID"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                - ok
                - ko
              deletedId:
                type: string
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
  "/search":
    parameters:
    - name: q
      type: string
      in: query
    - name: offset
      type: number
      in: query
    - name: limit
      type: number
      in: query
    - name: type
      type: string
      enum:
        - album
        - artist
        - playlist
      in: query
    post:
      tags:
      - Search
      summary: "Search a album"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Albums'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'

definitions:
  User:
    type: object
    properties:
      "_id":
        type: number
      email:
        type: string
        format: email
      password:
        type: string
  UserCreation:
    type: object
    properties:
      "_id":
        type: number
      email:
        type: string
        format: email
      password:
        type: string
  UserUpdate:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
  Favoris:
    type: object
    properties:
      "_id":
        type: number
      name:
        type: string
      userId:
        type: string
  FavorisCreation:
    type: object
    required:
    - name
    - description
    - userId
    properties:
      name:
        type: string
      userId:
        type: string
  FavorisUpdate:
    type: object
    properties:
      name:
        type: string
  Albums:
    type: object
    properties:
      "_id":
        type: number
      nom:
        type: string
      artist:
        type: string

  AlbumsCreation:
    type: object
    properties:
      name:
        type: string
      artist:
        type: string
  AlbumsUpdate:
    type: object
    properties:
      name:
        type: string
      checked:
        type: boolean
  NotFound:
    type: object
    properties:
      message:
        type: string
      status:
        type: number
